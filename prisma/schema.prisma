generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  available
  sold
}

model favorites {
  favorite_id Int       @id @default(autoincrement())
  user_id     Int
  material_id Int
  saved_at    DateTime? @default(now()) @db.Timestamptz(6)
  materials   materials @relation(fields: [material_id], references: [material_id], onDelete: Cascade, onUpdate: NoAction)
  users       users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  @@unique([user_id, material_id], map: "unique_user_material")
  @@index([user_id], map: "idx_favorites_user_id")
}

model materials {
  material_id Int         @id @default(autoincrement())
  user_id     Int
  name        String
  description String
  category    String
  price       Decimal     @db.Decimal
  quantity    Int
  posted_at   DateTime?   @default(now()) @db.Timestamptz(6)
  status      Status      @default(available)
  address       String
  favorites   favorites[]
  counter         counter?
  users       users       @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  material_images material_images[]
  @@index([category, status], map: "idx_materials_category_status")
  @@index([user_id], map: "idx_materials_user_id")
}

model users {
  user_id       Int         @id @default(autoincrement())
  storeName     String?   
  email         String      @unique
  password      String
  firstName     String
  lastName      String
  phone_number  String
  address       String?
  reset_code    String?  @unique   
  reset_expires DateTime?
  created_at    DateTime?   @default(now()) @db.Timestamptz(6)
  favorites     favorites[]
  materials     materials[]
}

model material_images {
  image_id     Int     @id @default(autoincrement())
  material_id  Int      @unique
  publicId     String?
  url_0        String     @db.VarChar(255)
  url_1        String?    @db.VarChar(255)
  url_2        String?    @db.VarChar(255)
  alt_text     String?    @db.VarChar(150)
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  materials    materials  @relation(fields: [material_id], references: [material_id], onDelete: Cascade)
}
model counter {
  counter_id  Int       @id @default(autoincrement())
  material_id Int       @unique
  count       Int       @default(0)
  materials    materials  @relation(fields: [material_id], references: [material_id], onDelete: Cascade)
}

